// 
// Decompiled by Procyon v0.5.36
// 

package net.minecraft.client.model;

import net.minecraft.util.EnumHandSide;
import net.minecraft.client.renderer.RenderHelper;
import java.awt.Color;
import ru.rockstar.api.utils.render.ClientHelper;
import ru.rockstar.api.utils.PalatteHelper;
import net.minecraft.util.math.MathHelper;
import net.minecraft.entity.EntityLivingBase;
import ru.rockstar.client.features.Feature;
import ru.rockstar.api.utils.friend.FriendManager;
import ru.rockstar.Main;
import net.minecraft.client.Minecraft;
import ru.rockstar.client.features.impl.visuals.CustomModel;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;

public class ModelPlayer extends ModelBiped
{
    public /* synthetic */ ModelRenderer armLeftpad2;
    /* synthetic */ ModelRenderer Chin;
    /* synthetic */ ModelRenderer Pitillo_2;
    public /* synthetic */ ModelRenderer torso;
    /* synthetic */ ModelRenderer bodyback;
    public /* synthetic */ ModelRenderer earRightpad_1;
    /* synthetic */ ModelRenderer LeftEar;
    private final /* synthetic */ ModelRenderer Rarm;
    /* synthetic */ ModelRenderer Pierna_2;
    private final /* synthetic */ ModelRenderer left_wing;
    public /* synthetic */ ModelRenderer armRightpad2;
    private final /* synthetic */ ModelRenderer Lleg;
    /* synthetic */ ModelRenderer LeftFrontFoot;
    private final /* synthetic */ ModelRenderer cube_r4;
    /* synthetic */ ModelRenderer RightEye;
    /* synthetic */ ModelRenderer chinHead;
    /* synthetic */ ModelRenderer Guante_1;
    /* synthetic */ ModelRenderer LeftEye;
    /* synthetic */ ModelRenderer Cuerpo;
    /* synthetic */ ModelRenderer head;
    /* synthetic */ ModelRenderer ear1;
    public /* synthetic */ ModelRenderer bipedLeftLegwear;
    public /* synthetic */ ModelRenderer bipedRightArmwear;
    private final /* synthetic */ ModelRenderer right_wing;
    public /* synthetic */ ModelRenderer fredbody;
    private final /* synthetic */ ModelRenderer bipedDeadmau5Head;
    public /* synthetic */ ModelRenderer bipedLeftArmwear;
    public /* synthetic */ ModelRenderer armLeft;
    public /* synthetic */ ModelRenderer legLeftpad;
    /* synthetic */ ModelRenderer leg2;
    /* synthetic */ ModelRenderer Brazo_4;
    /* synthetic */ ModelRenderer Guante_2;
    private final /* synthetic */ ModelRenderer left_leg7;
    private final /* synthetic */ ModelRenderer rabbitLleg;
    private final /* synthetic */ ModelRenderer right_leg;
    public /* synthetic */ ModelRenderer hat;
    public /* synthetic */ ModelRenderer legLeftpad2;
    public /* synthetic */ ModelRenderer armRight2;
    public /* synthetic */ ModelRenderer armRight;
    private final /* synthetic */ boolean smallArms;
    private final /* synthetic */ ModelRenderer RightArm;
    private final /* synthetic */ ModelRenderer LeftArm;
    /* synthetic */ ModelRenderer tail;
    private final /* synthetic */ ModelRenderer right_leg3;
    /* synthetic */ ModelRenderer Pantalon_1;
    /* synthetic */ ModelRenderer Agarrador_1;
    private final /* synthetic */ ModelRenderer cube_r3;
    private final /* synthetic */ ModelRenderer left_leg;
    public /* synthetic */ ModelRenderer legRight2;
    public /* synthetic */ ModelRenderer earRightpad;
    /* synthetic */ ModelRenderer foot1;
    /* synthetic */ ModelRenderer bodyfront;
    public /* synthetic */ ModelRenderer armLeft2;
    /* synthetic */ ModelRenderer Pitillo_1;
    private final /* synthetic */ ModelRenderer rabbitRarm;
    public /* synthetic */ ModelRenderer legRight;
    public /* synthetic */ ModelRenderer bipedBodyWear;
    /* synthetic */ ModelRenderer Cabeza;
    /* synthetic */ ModelRenderer Agarrador_2;
    private final /* synthetic */ ModelRenderer bone5;
    private final /* synthetic */ ModelRenderer bipedCape;
    private final /* synthetic */ ModelRenderer bb_main;
    /* synthetic */ ModelRenderer Pie_4;
    private final /* synthetic */ ModelRenderer Rleg;
    public /* synthetic */ ModelRenderer frednose;
    private final /* synthetic */ ModelRenderer head7;
    public /* synthetic */ ModelRenderer earLeft;
    private final /* synthetic */ ModelRenderer right_horn;
    /* synthetic */ ModelRenderer leg4;
    public /* synthetic */ ModelRenderer footRight;
    /* synthetic */ ModelRenderer Nose;
    /* synthetic */ ModelRenderer Agarrador_3;
    private final /* synthetic */ ModelRenderer bone2;
    private final /* synthetic */ ModelRenderer cube_r1;
    /* synthetic */ ModelRenderer leg1;
    /* synthetic */ ModelRenderer Brazo_1;
    /* synthetic */ ModelRenderer Back;
    public /* synthetic */ ModelRenderer legRightpad2;
    private final /* synthetic */ ModelRenderer right_leg7;
    public /* synthetic */ ModelRenderer legRightpad;
    public /* synthetic */ ModelRenderer armLeftpad;
    /* synthetic */ ModelRenderer nose;
    public /* synthetic */ ModelRenderer legLeft2;
    /* synthetic */ ModelRenderer RightEar;
    private final /* synthetic */ ModelRenderer left_horn;
    private final /* synthetic */ ModelRenderer bone4;
    /* synthetic */ ModelRenderer Pie_1;
    /* synthetic */ ModelRenderer Mano_1;
    private final /* synthetic */ ModelRenderer rabbitBone;
    /* synthetic */ ModelRenderer LeftRearFoot;
    private final /* synthetic */ ModelRenderer Larm;
    /* synthetic */ ModelRenderer RightWhiskers;
    /* synthetic */ ModelRenderer Mano_2;
    /* synthetic */ ModelRenderer ear2;
    /* synthetic */ ModelRenderer foot4;
    private final /* synthetic */ ModelRenderer bone7;
    private final /* synthetic */ ModelRenderer body7;
    /* synthetic */ ModelRenderer Pantalon_3;
    private final /* synthetic */ ModelRenderer LeftLeg;
    /* synthetic */ ModelRenderer LowerTail;
    private final /* synthetic */ ModelRenderer Head;
    public /* synthetic */ ModelRenderer fredhead;
    /* synthetic */ ModelRenderer Brazo_3;
    private final /* synthetic */ ModelRenderer left_leg1;
    public /* synthetic */ ModelRenderer footLeft;
    private final /* synthetic */ ModelRenderer rabbitRleg;
    /* synthetic */ ModelRenderer Pantalon_2;
    /* synthetic */ ModelRenderer UpperTail;
    private final /* synthetic */ ModelRenderer right_arm7;
    private final /* synthetic */ ModelRenderer rabbitLarm;
    public /* synthetic */ ModelRenderer hat2;
    public /* synthetic */ ModelRenderer armRightpad;
    public /* synthetic */ ModelRenderer earRight;
    /* synthetic */ ModelRenderer LeftWhiskers;
    private final /* synthetic */ ModelRenderer left_arm7;
    /* synthetic */ ModelRenderer foot3;
    private final /* synthetic */ ModelRenderer cube_r2;
    private /* synthetic */ ModelRenderer eye;
    private final /* synthetic */ ModelRenderer Body;
    private final /* synthetic */ ModelRenderer RightLeg;
    public /* synthetic */ ModelRenderer crotch;
    /* synthetic */ ModelRenderer leg3;
    public /* synthetic */ ModelRenderer bipedRightLegwear;
    /* synthetic */ ModelRenderer chinBody;
    public /* synthetic */ ModelRenderer legLeft;
    private final /* synthetic */ ModelRenderer bone3;
    private final /* synthetic */ ModelRenderer bone;
    public /* synthetic */ ModelRenderer jaw;
    /* synthetic */ ModelRenderer LeftFrontLeg;
    /* synthetic */ ModelRenderer Pie_3;
    /* synthetic */ ModelRenderer RightFrontFoot;
    /* synthetic */ ModelRenderer Brazo_2;
    public /* synthetic */ ModelRenderer handRight;
    private final /* synthetic */ ModelRenderer sonicHead;
    /* synthetic */ ModelRenderer Pierna_1;
    private final /* synthetic */ ModelRenderer rabbitHead;
    private final /* synthetic */ ModelRenderer body;
    /* synthetic */ ModelRenderer RightFrontLeg;
    /* synthetic */ ModelRenderer foot2;
    private final /* synthetic */ ModelRenderer bone6;
    /* synthetic */ ModelRenderer Pie_2;
    public /* synthetic */ ModelRenderer handLeft;
    /* synthetic */ ModelRenderer RightRearFoot;
    
    public ModelPlayer(final float lllllllllllIlIllIllllIlllllllllI, final boolean lllllllllllIlIllIlllllIIIIIIIIII) {
        super(lllllllllllIlIllIllllIlllllllllI, 0.0f, 64, 64);
        this.smallArms = lllllllllllIlIllIlllllIIIIIIIIII;
        final ModelRenderer bipedDeadmau5Head = new ModelRenderer(this, 24, 0);
        this.bipedDeadmau5Head = bipedDeadmau5Head;
        bipedDeadmau5Head.addBox(-3.0f, -6.0f, -1.0f, 6, 6, 1, lllllllllllIlIllIllllIlllllllllI);
        final ModelRenderer bipedCape = new ModelRenderer(this, 0, 0);
        this.bipedCape = bipedCape;
        bipedCape.setTextureSize(64, 32);
        this.bipedCape.addBox(-5.0f, 0.0f, -1.0f, 10, 16, 1, lllllllllllIlIllIllllIlllllllllI);
        if (lllllllllllIlIllIlllllIIIIIIIIII) {
            final ModelRenderer bipedLeftArm = new ModelRenderer(this, 32, 48);
            this.bipedLeftArm = bipedLeftArm;
            bipedLeftArm.addBox(-1.0f, -2.0f, -2.0f, 3, 12, 4, lllllllllllIlIllIllllIlllllllllI);
            this.bipedLeftArm.setRotationPoint(5.0f, 2.5f, 0.0f);
            final ModelRenderer bipedRightArm = new ModelRenderer(this, 40, 16);
            this.bipedRightArm = bipedRightArm;
            bipedRightArm.addBox(-2.0f, -2.0f, -2.0f, 3, 12, 4, lllllllllllIlIllIllllIlllllllllI);
            this.bipedRightArm.setRotationPoint(-5.0f, 2.5f, 0.0f);
            final ModelRenderer bipedLeftArmwear = new ModelRenderer(this, 48, 48);
            this.bipedLeftArmwear = bipedLeftArmwear;
            bipedLeftArmwear.addBox(-1.0f, -2.0f, -2.0f, 3, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
            this.bipedLeftArmwear.setRotationPoint(5.0f, 2.5f, 0.0f);
            final ModelRenderer bipedRightArmwear = new ModelRenderer(this, 40, 32);
            this.bipedRightArmwear = bipedRightArmwear;
            bipedRightArmwear.addBox(-2.0f, -2.0f, -2.0f, 3, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
            this.bipedRightArmwear.setRotationPoint(-5.0f, 2.5f, 10.0f);
        }
        else {
            final ModelRenderer bipedLeftArm2 = new ModelRenderer(this, 32, 48);
            this.bipedLeftArm = bipedLeftArm2;
            bipedLeftArm2.addBox(-1.0f, -2.0f, -2.0f, 4, 12, 4, lllllllllllIlIllIllllIlllllllllI);
            this.bipedLeftArm.setRotationPoint(5.0f, 2.0f, 0.0f);
            final ModelRenderer bipedLeftArmwear2 = new ModelRenderer(this, 48, 48);
            this.bipedLeftArmwear = bipedLeftArmwear2;
            bipedLeftArmwear2.addBox(-1.0f, -2.0f, -2.0f, 4, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
            this.bipedLeftArmwear.setRotationPoint(5.0f, 2.0f, 0.0f);
            final ModelRenderer bipedRightArmwear2 = new ModelRenderer(this, 40, 32);
            this.bipedRightArmwear = bipedRightArmwear2;
            bipedRightArmwear2.addBox(-3.0f, -2.0f, -2.0f, 4, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
            this.bipedRightArmwear.setRotationPoint(-5.0f, 2.0f, 10.0f);
        }
        final ModelRenderer bipedLeftLeg = new ModelRenderer(this, 16, 48);
        this.bipedLeftLeg = bipedLeftLeg;
        bipedLeftLeg.addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4, lllllllllllIlIllIllllIlllllllllI);
        this.bipedLeftLeg.setRotationPoint(1.9f, 12.0f, 0.0f);
        final ModelRenderer bipedLeftLegwear = new ModelRenderer(this, 0, 48);
        this.bipedLeftLegwear = bipedLeftLegwear;
        bipedLeftLegwear.addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
        this.bipedLeftLegwear.setRotationPoint(1.9f, 12.0f, 0.0f);
        final ModelRenderer bipedRightLegwear = new ModelRenderer(this, 0, 32);
        this.bipedRightLegwear = bipedRightLegwear;
        bipedRightLegwear.addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
        this.bipedRightLegwear.setRotationPoint(-1.9f, 12.0f, 0.0f);
        final ModelRenderer bipedBodyWear = new ModelRenderer(this, 16, 32);
        this.bipedBodyWear = bipedBodyWear;
        bipedBodyWear.addBox(-4.0f, 0.0f, -2.0f, 8, 12, 4, lllllllllllIlIllIllllIlllllllllI + 0.25f);
        this.bipedBodyWear.setRotationPoint(0.0f, 0.0f, 0.0f);
        final ModelRenderer body = new ModelRenderer(this);
        this.body = body;
        body.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.body.setTextureOffset(34, 8).addBox(-4.0f, 6.0f, -3.0f, 8, 12, 6);
        this.body.setTextureOffset(15, 10).addBox(-3.0f, 9.0f, 3.0f, 6, 8, 3);
        this.body.setTextureOffset(26, 0).addBox(-3.0f, 5.0f, -3.0f, 6, 1, 6);
        this.eye = new ModelRenderer(this);
        this.eye.setTextureOffset(0, 10).addBox(-3.0f, 7.0f, -4.0f, 6, 4, 1);
        final ModelRenderer left_leg = new ModelRenderer(this);
        this.left_leg = left_leg;
        left_leg.setRotationPoint(-2.0f, 18.0f, 0.0f);
        this.left_leg.setTextureOffset(0, 0).addBox(2.9f, 0.0f, -1.5f, 3, 6, 3, 0.0f);
        final ModelRenderer right_leg = new ModelRenderer(this);
        this.right_leg = right_leg;
        right_leg.setRotationPoint(2.0f, 18.0f, 0.0f);
        this.right_leg.setTextureOffset(13, 0).addBox(-5.9f, 0.0f, -1.5f, 3, 6, 3);
        final ModelRenderer rightLeg = new ModelRenderer(this);
        this.RightLeg = rightLeg;
        rightLeg.setRotationPoint(-2.0f, 14.0f, 0.0f);
        this.RightLeg.cubeList.add(new ModelBox(this.RightLeg, 0, 36, -2.0f, 0.0f, -2.0f, 4, 10, 4, 0.0f, false));
        final ModelRenderer leftLeg = new ModelRenderer(this);
        this.LeftLeg = leftLeg;
        leftLeg.setRotationPoint(2.0f, 14.0f, 0.0f);
        this.LeftLeg.cubeList.add(new ModelBox(this.LeftLeg, 24, 24, -2.0f, 0.0f, -2.0f, 4, 10, 4, 0.0f, false));
        final ModelRenderer body2 = new ModelRenderer(this);
        this.Body = body2;
        body2.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.setRotationAngle(this.Body, 0.2618f, 0.0f, 0.0f);
        this.Body.cubeList.add(new ModelBox(this.Body, 0, 18, -4.0f, -23.1486f, 0.5266f, 8, 14, 4, 0.0f, false));
        final ModelRenderer rightArm = new ModelRenderer(this);
        this.RightArm = rightArm;
        rightArm.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.setRotationAngle(this.RightArm, -1.309f, 0.0f, 0.0f);
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 36, 0, -7.0f, -4.5f, -23.25f, 3, 12, 3, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 16, 36, -6.0f, 5.75f, -25.25f, 1, 2, 5, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 31, 15, -6.0f, 5.75f, -30.25f, 1, 2, 5, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 0, 0, -6.0f, 8.75f, -28.25f, 1, 1, 3, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 24, 18, -6.0f, 7.75f, -29.25f, 1, 1, 5, 0.0f, false));
        final ModelRenderer head = new ModelRenderer(this);
        this.Head = head;
        head.setRotationPoint(0.0f, 1.0f, -3.0f);
        this.Head.cubeList.add(new ModelBox(this.Head, 0, 0, -5.0f, -9.75f, -5.0f, 10, 10, 8, 0.0f, false));
        final ModelRenderer leftArm = new ModelRenderer(this);
        this.LeftArm = leftArm;
        leftArm.setRotationPoint(4.0f, 3.0f, -3.0f);
        this.LeftArm.cubeList.add(new ModelBox(this.LeftArm, 37, 37, 0.0f, -1.75f, -1.5f, 3, 12, 3, 0.0f, false));
        final ModelRenderer bone = new ModelRenderer(this);
        this.bone = bone;
        bone.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.bone.setTextureOffset(0, 0).addCube(-8.0f, -12.0f, -6.0f, 16.0f, 7.0f, 12.0f, 0.0f, false);
        this.bone.setTextureOffset(44, 0).addCube(7.0f, -8.0f, -13.0f, 2.0f, 3.0f, 7.0f, 0.0f, false);
        this.bone.setTextureOffset(40, 40).addCube(-9.0f, -8.0f, -13.0f, 2.0f, 3.0f, 7.0f, 0.0f, false);
        this.bone.setTextureOffset(44, 27).addCube(-10.0f, -9.0f, -16.0f, 6.0f, 5.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(44, 19).addCube(4.0f, -9.0f, -16.0f, 6.0f, 5.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(32, 55).addCube(2.0f, -5.0f, -16.0f, 2.0f, 1.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(31, 19).addCube(-4.0f, -5.0f, -16.0f, 2.0f, 1.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(0, 41).addCube(-4.0f, -9.0f, -16.0f, 3.0f, 2.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(20, 39).addCube(1.0f, -9.0f, -16.0f, 3.0f, 2.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(0, 35).addCube(-6.0f, -8.0f, -9.0f, 3.0f, 3.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(22, 22).addCube(3.0f, -8.0f, -9.0f, 3.0f, 3.0f, 3.0f, 0.0f, false);
        final ModelRenderer cube_r1 = new ModelRenderer(this);
        this.cube_r1 = cube_r1;
        cube_r1.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r1);
        this.setRotationAngle(this.cube_r1, 0.0f, 0.0f, 0.3491f);
        this.cube_r1.setTextureOffset(51, 39).addCube(-11.5f, -1.8f, 4.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(8, 51).addCube(-11.5f, -1.8f, 0.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(24, 55).addCube(-11.5f, -1.8f, -6.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(0, 35).addCube(-12.5f, -5.8f, -6.0f, 4.0f, 4.0f, 12.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(22, 23).addCube(3.3f, -13.6f, -6.0f, 5.0f, 4.0f, 12.0f, 0.0f, false);
        final ModelRenderer cube_r2 = new ModelRenderer(this);
        this.cube_r2 = cube_r2;
        cube_r2.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r2);
        this.setRotationAngle(this.cube_r2, 0.0f, 0.0f, -0.3491f);
        this.cube_r2.setTextureOffset(52, 52).addCube(9.5f, -1.8f, 4.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(16, 55).addCube(9.5f, -1.8f, 0.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(0, 51).addCube(9.5f, -1.8f, -6.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(20, 39).addCube(8.5f, -5.8f, -6.0f, 4.0f, 4.0f, 12.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(0, 19).addCube(-8.3f, -13.6f, -6.0f, 5.0f, 4.0f, 12.0f, 0.0f, false);
        final ModelRenderer cube_r3 = new ModelRenderer(this);
        this.cube_r3 = cube_r3;
        cube_r3.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r3);
        this.setRotationAngle(this.cube_r3, 0.0f, 0.0f, 0.1309f);
        this.cube_r3.setTextureOffset(0, 0).addCube(1.3f, -18.0f, -6.7f, 3.0f, 6.0f, 3.0f, 0.0f, false);
        final ModelRenderer cube_r4 = new ModelRenderer(this);
        this.cube_r4 = cube_r4;
        cube_r4.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r4);
        this.setRotationAngle(this.cube_r4, 0.0f, 0.0f, -0.1309f);
        this.cube_r4.setTextureOffset(0, 19).addCube(-4.3f, -18.0f, -6.7f, 3.0f, 6.0f, 3.0f, 0.0f, false);
        final ModelRenderer head2 = new ModelRenderer(this);
        this.head7 = head2;
        head2.setRotationPoint(0.0f, -6.0f, -1.0f);
        this.head7.setTextureOffset(0, 0).addCube(-4.0f, -4.0f, -3.0f, 8.0f, 8.0f, 8.0f, 0.3f, false);
        final ModelRenderer left_horn = new ModelRenderer(this);
        this.left_horn = left_horn;
        left_horn.setRotationPoint(-8.0f, 8.0f, 0.0f);
        this.head7.addChild(this.left_horn);
        this.setRotationAngle(this.left_horn, -0.3927f, 0.3927f, -0.5236f);
        this.left_horn.setTextureOffset(32, 8).addCube(13.4346f, -5.2071f, 2.7071f, 6.0f, 2.0f, 2.0f, 0.1f, false);
        this.left_horn.setTextureOffset(0, 0).addCube(17.4346f, -10.4071f, 2.7071f, 2.0f, 5.0f, 2.0f, 0.1f, false);
        final ModelRenderer right_horn = new ModelRenderer(this);
        this.right_horn = right_horn;
        right_horn.setRotationPoint(8.0f, 8.0f, 0.0f);
        this.head7.addChild(this.right_horn);
        this.setRotationAngle(this.right_horn, -0.3927f, -0.3927f, 0.5236f);
        this.right_horn.setTextureOffset(32, 8).addCube(-19.4346f, -5.2071f, 2.7071f, 6.0f, 2.0f, 2.0f, 0.1f, true);
        this.right_horn.setTextureOffset(0, 0).addCube(-19.4346f, -10.4071f, 2.7071f, 2.0f, 5.0f, 2.0f, 0.1f, true);
        final ModelRenderer body3 = new ModelRenderer(this);
        this.body7 = body3;
        body3.setRotationPoint(0.5f, -0.1f, -3.5f);
        this.setRotationAngle(this.body7, 0.1745f, 0.0f, 0.0f);
        this.body7.setTextureOffset(0, 16).addCube(-4.5f, -1.7028f, 1.4696f, 8.0f, 12.0f, 4.0f, 0.0f, false);
        final ModelRenderer left_wing = new ModelRenderer(this);
        this.left_wing = left_wing;
        left_wing.setRotationPoint(8.25f, -2.0f, 10.0f);
        this.body7.addChild(this.left_wing);
        this.setRotationAngle(this.left_wing, 0.0873f, -0.829f, 0.1745f);
        this.left_wing.setTextureOffset(40, 12).addCube(-7.0072f, -0.5972f, 0.7515f, 12.0f, 13.0f, 0.0f, 0.0f, false);
        final ModelRenderer right_wing = new ModelRenderer(this);
        this.right_wing = right_wing;
        right_wing.setRotationPoint(-9.25f, -2.0f, 10.0f);
        this.body7.addChild(this.right_wing);
        this.setRotationAngle(this.right_wing, 0.0873f, 0.829f, -0.1745f);
        this.right_wing.setTextureOffset(40, 12).addCube(-4.9928f, -0.5972f, 0.7515f, 12.0f, 13.0f, 0.0f, 0.0f, true);
        final ModelRenderer left_arm7 = new ModelRenderer(this);
        this.left_arm7 = left_arm7;
        left_arm7.setRotationPoint(5.4f, -1.25f, -2.0f);
        this.setRotationAngle(this.left_arm7, 0.0f, 0.0f, -0.2182f);
        this.left_arm7.setTextureOffset(24, 16).addCube(-1.1f, -1.05f, 0.0f, 4.0f, 14.0f, 4.0f, 0.0f, false);
        final ModelRenderer right_arm7 = new ModelRenderer(this);
        this.right_arm7 = right_arm7;
        right_arm7.setRotationPoint(-5.4f, -1.25f, -2.0f);
        this.setRotationAngle(this.right_arm7, 0.0f, 0.0f, 0.2182f);
        this.right_arm7.setTextureOffset(24, 16).addCube(-2.9f, -1.05f, 0.0f, 4.0f, 14.0f, 4.0f, 0.0f, true);
        final ModelRenderer left_leg2 = new ModelRenderer(this);
        this.left_leg7 = left_leg2;
        left_leg2.setRotationPoint(3.0f, 10.0f, 0.0f);
        this.left_leg7.setTextureOffset(48, 22).addCube(-3.25f, -2.25f, -1.0f, 4.0f, 9.0f, 4.0f, 0.0f, false);
        final ModelRenderer left_leg3 = new ModelRenderer(this);
        this.left_leg1 = left_leg3;
        left_leg3.setRotationPoint(-1.7f, -0.1f, -3.55f);
        this.left_leg7.addChild(this.left_leg1);
        this.setRotationAngle(this.left_leg1, -0.5236f, 0.0f, 0.0f);
        this.left_leg1.setTextureOffset(34, 34).addCube(0.95f, 4.6f, 8.0511f, 3.0f, 5.0f, 3.0f, 0.0f, false);
        final ModelRenderer bone2 = new ModelRenderer(this);
        this.bone2 = bone2;
        bone2.setRotationPoint(1.4f, 15.0f, 0.25f);
        this.left_leg1.addChild(this.bone2);
        this.setRotationAngle(this.bone2, 0.5236f, 0.0f, 0.0f);
        this.bone2.setTextureOffset(26, 0).addCube(-0.7f, -1.15f, 9.3f, 4.0f, 2.0f, 4.0f, 0.0f, false);
        this.bone2.setTextureOffset(40, 0).addCube(-0.7f, -1.15f, 7.3f, 4.0f, 2.0f, 2.0f, 0.0f, false);
        final ModelRenderer bone3 = new ModelRenderer(this);
        this.bone3 = bone3;
        bone3.setRotationPoint(-1.0f, 0.0f, -2.0f);
        this.left_leg1.addChild(this.bone3);
        this.setRotationAngle(this.bone3, 0.0f, -0.0873f, -0.2618f);
        final ModelRenderer bone4 = new ModelRenderer(this);
        this.bone7 = bone4;
        bone4.setRotationPoint(1.9f, 12.0f, 0.25f);
        this.bone3.addChild(this.bone7);
        this.bone7.setTextureOffset(16, 34).addCube(-0.7911f, -10.1159f, 8.0029f, 4.0f, 4.0f, 5.0f, 0.0f, false);
        this.bone7.setTextureOffset(0, 32).addCube(-0.7911f, -15.1159f, 4.0029f, 4.0f, 9.0f, 4.0f, 0.0f, false);
        final ModelRenderer right_leg2 = new ModelRenderer(this);
        this.right_leg7 = right_leg2;
        right_leg2.setRotationPoint(-3.0f, 10.0f, 0.0f);
        this.right_leg7.setTextureOffset(48, 22).addCube(-0.75f, -2.25f, -1.0f, 4.0f, 9.0f, 4.0f, 0.0f, true);
        final ModelRenderer right_leg3 = new ModelRenderer(this);
        this.right_leg3 = right_leg3;
        right_leg3.setRotationPoint(1.7f, -0.1f, -3.55f);
        this.right_leg7.addChild(this.right_leg3);
        this.setRotationAngle(this.right_leg3, -0.5236f, 0.0f, 0.0f);
        this.right_leg3.setTextureOffset(34, 34).addCube(-3.95f, 4.6f, 8.0511f, 3.0f, 5.0f, 3.0f, 0.0f, true);
        final ModelRenderer bone5 = new ModelRenderer(this);
        this.bone4 = bone5;
        bone5.setRotationPoint(-1.4f, 15.0f, 0.25f);
        this.right_leg3.addChild(this.bone4);
        this.setRotationAngle(this.bone4, 0.5236f, 0.0f, 0.0f);
        this.bone4.setTextureOffset(26, 0).addCube(-3.3f, -1.15f, 9.3f, 4.0f, 2.0f, 4.0f, 0.0f, true);
        this.bone4.setTextureOffset(40, 0).addCube(-3.3f, -1.15f, 7.3f, 4.0f, 2.0f, 2.0f, 0.0f, true);
        final ModelRenderer bone6 = new ModelRenderer(this);
        this.bone5 = bone6;
        bone6.setRotationPoint(1.0f, 0.0f, -2.0f);
        this.right_leg3.addChild(this.bone5);
        this.setRotationAngle(this.bone5, 0.0f, 0.0873f, 0.2618f);
        final ModelRenderer bone7 = new ModelRenderer(this);
        this.bone6 = bone7;
        bone7.setRotationPoint(-1.9f, 12.0f, 0.25f);
        this.bone5.addChild(this.bone6);
        this.bone6.setTextureOffset(16, 34).addCube(-3.2089f, -10.1159f, 8.0029f, 4.0f, 4.0f, 5.0f, 0.0f, true);
        this.bone6.setTextureOffset(0, 32).addCube(-3.2089f, -15.1159f, 4.0029f, 4.0f, 9.0f, 4.0f, 0.0f, true);
        final ModelRenderer head3 = new ModelRenderer(this, 29, 5);
        this.head = head3;
        head3.addBox(-4.0f, -4.0f, -6.0f, 8, 7, 6);
        this.head.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.head.setTextureSize(64, 64);
        this.head.mirror = true;
        this.setRotationAngle(this.head, 0.0f, 0.0f, 0.0f);
        final ModelRenderer nose = new ModelRenderer(this, 45, 20);
        this.nose = nose;
        nose.addBox(-2.0f, -0.5f, -7.5f, 4, 3, 2);
        this.nose.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.nose.setTextureSize(64, 64);
        this.nose.mirror = true;
        this.setRotationAngle(this.nose, 0.0f, 0.0f, 0.0f);
        final ModelRenderer ear1 = new ModelRenderer(this, 45, 27);
        this.ear1 = ear1;
        ear1.addBox(1.5f, -6.0f, -4.0f, 4, 4, 2);
        this.ear1.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.ear1.setTextureSize(64, 64);
        this.ear1.mirror = true;
        this.setRotationAngle(this.ear1, 0.0f, -0.1745329f, 0.0f);
        final ModelRenderer ear2 = new ModelRenderer(this, 45, 34);
        this.ear2 = ear2;
        ear2.addBox(-5.5f, -6.0f, -4.0f, 4, 4, 2);
        this.ear2.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.ear2.setTextureSize(64, 64);
        this.ear2.mirror = true;
        this.setRotationAngle(this.ear2, 0.0f, 0.1745329f, 0.0f);
        final ModelRenderer bodyfront = new ModelRenderer(this, 2, 45);
        this.bodyfront = bodyfront;
        bodyfront.addBox(0.0f, 0.0f, 0.0f, 9, 8, 9);
        this.bodyfront.setRotationPoint(-4.5f, 11.0f, -6.0f);
        this.bodyfront.setTextureSize(64, 64);
        this.bodyfront.mirror = true;
        this.setRotationAngle(this.bodyfront, 0.0872665f, 0.0f, 0.0f);
        final ModelRenderer bodyback = new ModelRenderer(this, 2, 26);
        this.bodyback = bodyback;
        bodyback.addBox(0.0f, 0.0f, 0.0f, 10, 8, 10);
        this.bodyback.setRotationPoint(-5.0f, 10.0f, 3.0f);
        this.bodyback.setTextureSize(64, 64);
        this.bodyback.mirror = true;
        this.setRotationAngle(this.bodyback, -0.0872665f, 0.0f, 0.0f);
        final ModelRenderer leg1 = new ModelRenderer(this, 44, 50);
        this.leg1 = leg1;
        leg1.addBox(0.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg1.setRotationPoint(1.0f, 16.0f, -5.0f);
        this.leg1.setTextureSize(64, 64);
        this.leg1.mirror = true;
        this.setRotationAngle(this.leg1, 0.0f, 0.0f, 0.0f);
        final ModelRenderer foot1 = new ModelRenderer(this, 47, 43);
        this.foot1 = foot1;
        foot1.addBox(0.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot1.setRotationPoint(1.0f, 16.0f, -5.0f);
        this.foot1.setTextureSize(64, 64);
        this.foot1.mirror = true;
        this.setRotationAngle(this.foot1, 0.0f, 0.0f, 0.0f);
        final ModelRenderer leg2 = new ModelRenderer(this, 44, 50);
        this.leg2 = leg2;
        leg2.addBox(-4.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg2.setRotationPoint(-1.0f, 16.0f, -5.0f);
        this.leg2.setTextureSize(64, 64);
        this.leg2.mirror = true;
        this.setRotationAngle(this.leg2, 0.0f, 0.0f, 0.0f);
        final ModelRenderer foot2 = new ModelRenderer(this, 47, 43);
        this.foot2 = foot2;
        foot2.addBox(-4.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot2.setRotationPoint(-1.0f, 16.0f, -5.0f);
        this.foot2.setTextureSize(64, 64);
        this.foot2.mirror = true;
        this.setRotationAngle(this.foot2, 0.0f, 0.0f, 0.0f);
        final ModelRenderer leg3 = new ModelRenderer(this, 44, 50);
        this.leg3 = leg3;
        leg3.addBox(0.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg3.setRotationPoint(1.5f, 16.0f, 9.0f);
        this.leg3.setTextureSize(64, 64);
        this.leg3.mirror = true;
        this.setRotationAngle(this.leg3, 0.0f, 0.0f, 0.0f);
        final ModelRenderer foot3 = new ModelRenderer(this, 47, 43);
        this.foot3 = foot3;
        foot3.addBox(0.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot3.setRotationPoint(1.5f, 16.0f, 9.0f);
        this.foot3.setTextureSize(64, 64);
        this.foot3.mirror = true;
        this.setRotationAngle(this.foot3, 0.0f, 0.0f, 0.0f);
        final ModelRenderer leg4 = new ModelRenderer(this, 44, 50);
        this.leg4 = leg4;
        leg4.addBox(-4.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg4.setRotationPoint(-1.5f, 16.0f, 9.0f);
        this.leg4.setTextureSize(64, 64);
        this.leg4.mirror = true;
        this.setRotationAngle(this.leg4, 0.0f, 0.0f, 0.0f);
        final ModelRenderer foot4 = new ModelRenderer(this, 47, 43);
        this.foot4 = foot4;
        foot4.addBox(-4.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot4.setRotationPoint(-1.5f, 16.0f, 9.0f);
        this.foot4.setTextureSize(64, 64);
        this.foot4.mirror = true;
        this.setRotationAngle(this.foot4, 0.0f, 0.0f, 0.0f);
        final ModelRenderer tail = new ModelRenderer(this, 2, 3);
        this.tail = tail;
        tail.addBox(-2.0f, -2.0f, 0.0f, 4, 5, 17);
        this.tail.setRotationPoint(0.0f, 14.0f, 11.0f);
        this.tail.setTextureSize(64, 64);
        this.tail.mirror = true;
        this.setRotationAngle(this.tail, -0.1745329f, 0.0f, 0.0f);
        this.textureWidth = 64;
        this.textureHeight = 32;
        final ModelRenderer back = new ModelRenderer(this, 0, 14);
        this.Back = back;
        back.addBox(-3.0f, 0.3f, 3.3f, 6, 6, 3);
        this.Back.setRotationPoint(0.0f, 18.0f, -2.0f);
        this.Back.setTextureSize(64, 32);
        this.Back.mirror = true;
        this.setRotationAngle(this.Back, 0.2443461f, 0.0f, 0.0f);
        final ModelRenderer nose2 = new ModelRenderer(this, 46, 24);
        this.Nose = nose2;
        nose2.addBox(-2.0f, -3.0f, -3.0f, 4, 4, 2);
        this.Nose.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.Nose.setTextureSize(64, 32);
        this.Nose.mirror = true;
        this.setRotationAngle(this.Nose, 0.3687912f, 0.0f, 0.0f);
        final ModelRenderer rightEar = new ModelRenderer(this, 48, 8);
        this.RightEar = rightEar;
        rightEar.addBox(0.5f, -6.0f, -0.6f, 1, 4, 3);
        this.RightEar.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.RightEar.setTextureSize(64, 32);
        this.RightEar.mirror = true;
        this.setRotationAngle(this.RightEar, 0.8726646f, 2.094395f, 0.0f);
        final ModelRenderer rightWhiskers = new ModelRenderer(this, 18, 19);
        this.RightWhiskers = rightWhiskers;
        rightWhiskers.addBox(-5.0f, -1.4f, -4.04f, 4, 3, 1);
        this.RightWhiskers.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.RightWhiskers.setTextureSize(64, 32);
        this.RightWhiskers.mirror = true;
        this.setRotationAngle(this.RightWhiskers, -0.0872665f, 0.1745329f, 0.0f);
        final ModelRenderer leftEar = new ModelRenderer(this, 48, 0);
        this.LeftEar = leftEar;
        leftEar.addBox(0.5f, -6.0f, -2.4f, 1, 4, 3);
        this.LeftEar.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.LeftEar.setTextureSize(64, 32);
        this.LeftEar.mirror = true;
        this.setRotationAngle(this.LeftEar, -0.8726646f, 1.047198f, 0.0f);
        final ModelRenderer upperTail = new ModelRenderer(this, 14, 23);
        this.UpperTail = upperTail;
        upperTail.addBox(-1.5f, 1.5f, 2.6f, 3, 3, 4);
        this.UpperTail.setRotationPoint(0.0f, 22.2f, 4.066667f);
        this.UpperTail.setTextureSize(64, 32);
        this.UpperTail.mirror = true;
        this.setRotationAngle(this.UpperTail, 0.7330383f, 0.0f, 0.0f);
        final ModelRenderer chinBody = new ModelRenderer(this, 0, 0);
        this.chinBody = chinBody;
        chinBody.addBox(-3.5f, -2.0f, -1.0f, 7, 7, 7);
        this.chinBody.setRotationPoint(0.0f, 18.0f, -2.0f);
        this.chinBody.setTextureSize(64, 32);
        this.chinBody.mirror = true;
        this.setRotationAngle(this.chinBody, -0.0872665f, 0.0f, 0.0f);
        final ModelRenderer lowerTail = new ModelRenderer(this, 0, 23);
        this.LowerTail = lowerTail;
        lowerTail.addBox(-1.0f, -1.0f, 0.0f, 2, 2, 5);
        this.LowerTail.setRotationPoint(0.0f, 22.2f, 4.066667f);
        this.LowerTail.setTextureSize(64, 32);
        this.LowerTail.mirror = true;
        this.setRotationAngle(this.LowerTail, -0.1047198f, 0.0f, 0.0f);
        final ModelRenderer rightRearFoot = new ModelRenderer(this, 28, 9);
        this.RightRearFoot = rightRearFoot;
        rightRearFoot.addBox(-1.5f, 0.0f, -3.0f, 2, 1, 4);
        this.RightRearFoot.setRotationPoint(-3.0f, 23.0f, 3.0f);
        this.RightRearFoot.setTextureSize(64, 32);
        this.RightRearFoot.mirror = true;
        this.setRotationAngle(this.RightRearFoot, 0.0f, 0.0698132f, 0.0f);
        final ModelRenderer leftRearFoot = new ModelRenderer(this, 28, 0);
        this.LeftRearFoot = leftRearFoot;
        leftRearFoot.addBox(-0.5f, 0.0f, -3.0f, 2, 1, 4);
        this.LeftRearFoot.setRotationPoint(3.0f, 23.0f, 3.0f);
        this.LeftRearFoot.setTextureSize(64, 32);
        this.LeftRearFoot.mirror = true;
        this.setRotationAngle(this.LeftRearFoot, 0.0f, -0.0698132f, 0.0f);
        final ModelRenderer rightFrontLeg = new ModelRenderer(this, 40, 9);
        this.RightFrontLeg = rightFrontLeg;
        rightFrontLeg.addBox(-1.0f, 0.0f, -1.0f, 2, 4, 2);
        this.RightFrontLeg.setRotationPoint(-3.0f, 20.0f, -3.0f);
        this.RightFrontLeg.setTextureSize(64, 32);
        this.RightFrontLeg.mirror = true;
        this.setRotationAngle(this.RightFrontLeg, -0.1858931f, 0.0f, 0.0f);
        final ModelRenderer rightFrontFoot = new ModelRenderer(this, 28, 14);
        this.RightFrontFoot = rightFrontFoot;
        rightFrontFoot.addBox(-1.0f, 3.0f, -2.8f, 2, 1, 3);
        this.RightFrontFoot.setRotationPoint(-3.0f, 20.0f, -3.0f);
        this.RightFrontFoot.setTextureSize(64, 32);
        this.RightFrontFoot.mirror = true;
        this.setRotationAngle(this.RightFrontFoot, 0.0f, -0.0698132f, 0.0f);
        final ModelRenderer leftFrontLeg = new ModelRenderer(this, 40, 0);
        this.LeftFrontLeg = leftFrontLeg;
        leftFrontLeg.addBox(-1.0f, 0.0f, -1.0f, 2, 4, 2);
        this.LeftFrontLeg.setRotationPoint(3.0f, 20.0f, -3.0f);
        this.LeftFrontLeg.setTextureSize(64, 32);
        this.LeftFrontLeg.mirror = true;
        this.setRotationAngle(this.LeftFrontLeg, -0.1858931f, 0.0f, 0.0f);
        final ModelRenderer leftFrontFoot = new ModelRenderer(this, 28, 5);
        this.LeftFrontFoot = leftFrontFoot;
        leftFrontFoot.addBox(-1.0f, 3.0f, -2.8f, 2, 1, 3);
        this.LeftFrontFoot.setRotationPoint(3.0f, 20.0f, -3.0f);
        this.LeftFrontFoot.setTextureSize(64, 32);
        this.LeftFrontFoot.mirror = true;
        this.setRotationAngle(this.LeftFrontFoot, 0.0f, 0.0698132f, 0.0f);
        final ModelRenderer chin = new ModelRenderer(this, 46, 18);
        this.Chin = chin;
        chin.addBox(-2.0f, -1.3f, -4.04f, 4, 3, 2);
        this.Chin.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.Chin.setTextureSize(64, 32);
        this.Chin.mirror = true;
        this.setRotationAngle(this.Chin, -0.1115358f, 0.0f, 0.0f);
        final ModelRenderer leftWhiskers = new ModelRenderer(this, 18, 14);
        this.LeftWhiskers = leftWhiskers;
        leftWhiskers.addBox(1.0f, -1.4f, -4.04f, 4, 3, 1);
        this.LeftWhiskers.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.LeftWhiskers.setTextureSize(64, 32);
        this.LeftWhiskers.mirror = true;
        this.setRotationAngle(this.LeftWhiskers, -0.0872665f, -0.1745329f, 0.0f);
        final ModelRenderer chinHead = new ModelRenderer(this, 28, 21);
        this.chinHead = chinHead;
        chinHead.addBox(-2.5f, -3.0f, -2.4f, 5, 5, 4);
        this.chinHead.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.chinHead.setTextureSize(64, 32);
        this.chinHead.mirror = true;
        this.setRotationAngle(this.chinHead, 0.0f, 0.0f, 0.0f);
        final ModelRenderer leftEye = new ModelRenderer(this, 0, 0);
        this.LeftEye = leftEye;
        leftEye.addBox(-2.0f, -1.8f, -3.4f, 2, 2, 1);
        this.LeftEye.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.LeftEye.setTextureSize(64, 32);
        this.LeftEye.mirror = true;
        this.setRotationAngle(this.LeftEye, 0.0f, -1.047198f, 0.0f);
        final ModelRenderer rightEye = new ModelRenderer(this, 0, 3);
        this.RightEye = rightEye;
        rightEye.addBox(0.0f, -1.8f, -3.4f, 2, 2, 1);
        this.RightEye.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.RightEye.setTextureSize(64, 32);
        this.RightEye.mirror = true;
        this.setRotationAngle(this.RightEye, 0.0f, 1.047198f, 0.0f);
        this.textureWidth = 64;
        this.textureHeight = 64;
        final ModelRenderer rabbitBone = new ModelRenderer(this);
        this.rabbitBone = rabbitBone;
        rabbitBone.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.rabbitBone.cubeList.add(new ModelBox(this.rabbitBone, 28, 45, -5.0f, -13.0f, -5.0f, 10, 11, 8, 0.0f, false));
        final ModelRenderer rabbitRleg = new ModelRenderer(this);
        this.rabbitRleg = rabbitRleg;
        rabbitRleg.setRotationPoint(-3.0f, -2.0f, -1.0f);
        this.rabbitBone.addChild(this.rabbitRleg);
        this.rabbitRleg.cubeList.add(new ModelBox(this.rabbitRleg, 0, 0, -2.0f, 0.0f, -2.0f, 4, 2, 4, 0.0f, false));
        final ModelRenderer rabbitLarm = new ModelRenderer(this);
        this.rabbitLarm = rabbitLarm;
        rabbitLarm.setRotationPoint(5.0f, -13.0f, -1.0f);
        this.setRotationAngle(this.rabbitLarm, 0.0f, 0.0f, -0.0873f);
        this.rabbitBone.addChild(this.rabbitLarm);
        this.rabbitLarm.cubeList.add(new ModelBox(this.rabbitLarm, 0, 0, 0.0f, 0.0f, -2.0f, 2, 8, 4, 0.0f, false));
        final ModelRenderer rabbitRarm = new ModelRenderer(this);
        this.rabbitRarm = rabbitRarm;
        rabbitRarm.setRotationPoint(-5.0f, -13.0f, -1.0f);
        this.setRotationAngle(this.rabbitRarm, 0.0f, 0.0f, 0.0873f);
        this.rabbitBone.addChild(this.rabbitRarm);
        this.rabbitRarm.cubeList.add(new ModelBox(this.rabbitRarm, 0, 0, -2.0f, 0.0f, -2.0f, 2, 8, 4, 0.0f, false));
        final ModelRenderer rabbitLleg = new ModelRenderer(this);
        this.rabbitLleg = rabbitLleg;
        rabbitLleg.setRotationPoint(3.0f, -2.0f, -1.0f);
        this.rabbitBone.addChild(this.rabbitLleg);
        this.rabbitLleg.cubeList.add(new ModelBox(this.rabbitLleg, 0, 0, -2.0f, 0.0f, -2.0f, 4, 2, 4, 0.0f, false));
        final ModelRenderer rabbitHead = new ModelRenderer(this);
        this.rabbitHead = rabbitHead;
        rabbitHead.setRotationPoint(0.0f, -14.0f, -1.0f);
        this.rabbitBone.addChild(this.rabbitHead);
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 0, 0, -3.0f, 0.0f, -4.0f, 6, 1, 6, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 56, 0, -5.0f, -9.0f, -5.0f, 2, 3, 2, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 56, 0, 3.0f, -9.0f, -5.0f, 2, 3, 2, 0.0f, true));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 0, 45, -4.0f, -11.0f, -4.0f, 8, 11, 8, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 46, 0, 1.0f, -20.0f, 0.0f, 3, 9, 1, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 46, 0, -4.0f, -20.0f, 0.0f, 3, 9, 1, 0.0f, false));
        this.textureWidth = 64;
        this.textureHeight = 64;
        final ModelRenderer bb_main = new ModelRenderer(this);
        this.bb_main = bb_main;
        bb_main.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -17.0f, -2.0f, 5, 7, 5, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 22, -3.0f, -16.0f, -3.0f, 5, 5, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -16.0f, 3.0f, 5, 5, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, 0.0f, -15.0f, 3.0f, 1, 1, 3, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -14.0f, 4.0f, 1, 1, 2, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -1.0f, -11.0f, 3.0f, 1, 1, 2, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, 0.0f, -14.0f, 6.0f, 1, 1, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -13.0f, 6.0f, 1, 1, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -1.0f, -12.0f, 5.0f, 1, 1, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -4.0f, -16.0f, -2.0f, 1, 5, 5, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, 2.0f, -16.0f, -2.0f, 1, 5, 5, 0.0f, false));
        final ModelRenderer rleg = new ModelRenderer(this);
        this.Rleg = rleg;
        rleg.setRotationPoint(-3.0f, 14.0f, 0.5f);
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 53, 54, -1.5f, 7.0f, -1.0f, 2, 1, 2, 0.0f, false));
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 0, 0, -1.0f, -1.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 52, 58, -1.5f, 8.0f, -3.0f, 2, 2, 4, 0.0f, true));
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 52, 58, -2.0f, 9.0f, -2.0f, 0, 1, 1, 0.0f, false));
        final ModelRenderer lleg = new ModelRenderer(this);
        this.Lleg = lleg;
        lleg.setRotationPoint(2.0f, 14.0f, 0.5f);
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 53, 54, -0.5f, 7.0f, -1.0f, 2, 1, 2, 0.0f, false));
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 0, 0, 0.0f, -1.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 52, 58, -0.5f, 8.0f, -3.0f, 2, 2, 4, 0.0f, false));
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 52, 58, 1.5f, 9.0f, -2.0f, 0, 1, 1, 0.0f, false));
        final ModelRenderer larm = new ModelRenderer(this);
        this.Larm = larm;
        larm.setRotationPoint(3.0f, 9.0f, 0.5f);
        this.setRotationAngle(this.Larm, 0.0f, 0.0f, -0.0873f);
        this.Larm.cubeList.add(new ModelBox(this.Larm, 0, 60, -0.5f, 8.0f, -1.0f, 2, 2, 2, 0.0f, false));
        this.Larm.cubeList.add(new ModelBox(this.Larm, 60, 17, 0.0f, 0.0f, -0.5f, 1, 8, 1, 0.0f, false));
        final ModelRenderer rarm = new ModelRenderer(this);
        this.Rarm = rarm;
        rarm.setRotationPoint(-4.0f, 9.0f, 0.5f);
        this.setRotationAngle(this.Rarm, 0.0f, 0.0f, 0.0873f);
        this.Rarm.cubeList.add(new ModelBox(this.Rarm, 60, 17, -1.0f, 0.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Rarm.cubeList.add(new ModelBox(this.Rarm, 0, 60, -1.5f, 8.0f, -1.0f, 2, 2, 2, 0.0f, false));
        final ModelRenderer sonicHead = new ModelRenderer(this);
        this.sonicHead = sonicHead;
        sonicHead.setRotationPoint(-0.5f, 7.0f, 0.0f);
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 36, 3, -3.5f, -7.0f, -3.0f, 7, 7, 7, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 60, 0, -0.5f, -3.0f, -4.0f, 1, 1, 1, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -3.5f, -4.0f, 6.0f, 3, 3, 3, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -3.5f, -5.0f, 4.0f, 3, 3, 2, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, 0.5f, -6.0f, 6.0f, 3, 3, 3, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, 0.5f, -7.0f, 4.0f, 3, 3, 2, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -2.5f, -9.0f, 3.0f, 3, 3, 2, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -2.5f, -10.0f, 5.0f, 3, 3, 3, 0.0f, false));
        this.textureWidth = 128;
        this.textureHeight = 64;
        final ModelRenderer agarrador_2 = new ModelRenderer(this, 29, 10);
        this.Agarrador_2 = agarrador_2;
        agarrador_2.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Agarrador_2.setRotationPoint(-1.0f, 4.0f, -10.0f);
        this.Agarrador_2.setTextureSize(64, 32);
        this.Agarrador_2.mirror = true;
        this.setRotationAngle(this.Agarrador_2, 0.0f, 0.0f, 0.0f);
        final ModelRenderer agarrador_3 = new ModelRenderer(this, 29, 10);
        this.Agarrador_3 = agarrador_3;
        agarrador_3.addBox(0.0f, 0.0f, 0.0f, 2, 2, 3);
        this.Agarrador_3.setRotationPoint(-1.0f, 6.0f, -10.0f);
        this.Agarrador_3.setTextureSize(64, 32);
        this.Agarrador_3.mirror = true;
        this.setRotationAngle(this.Agarrador_3, 0.0f, 0.0f, 0.0f);
        final ModelRenderer cuerpo = new ModelRenderer(this, 43, 40);
        this.Cuerpo = cuerpo;
        cuerpo.addBox(0.0f, 0.0f, 0.0f, 4, 4, 3);
        this.Cuerpo.setRotationPoint(-2.0f, 8.0f, -5.0f);
        this.Cuerpo.setTextureSize(64, 32);
        this.Cuerpo.mirror = true;
        this.setRotationAngle(this.Cuerpo, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pie_3 = new ModelRenderer(this, 0, 0);
        this.Pie_3 = pie_3;
        pie_3.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Pie_3.setRotationPoint(0.0f, 21.0f, -4.0f);
        this.Pie_3.setTextureSize(64, 32);
        this.Pie_3.mirror = true;
        this.setRotationAngle(this.Pie_3, 0.0f, 0.1047198f, 0.0f);
        final ModelRenderer agarrador_4 = new ModelRenderer(this, 29, 10);
        this.Agarrador_1 = agarrador_4;
        agarrador_4.addBox(0.0f, 0.0f, 0.0f, 2, 2, 3);
        this.Agarrador_1.setRotationPoint(-1.0f, 2.0f, -10.0f);
        this.Agarrador_1.setTextureSize(64, 32);
        this.Agarrador_1.mirror = true;
        this.setRotationAngle(this.Agarrador_1, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pantalon_1 = new ModelRenderer(this, 1, 27);
        this.Pantalon_1 = pantalon_1;
        pantalon_1.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Pantalon_1.setRotationPoint(0.8f, 15.0f, -4.0f);
        this.Pantalon_1.setTextureSize(64, 32);
        this.Pantalon_1.mirror = true;
        this.setRotationAngle(this.Pantalon_1, 0.0f, 0.0698132f, 0.0f);
        final ModelRenderer cabeza = new ModelRenderer(this, 11, 20);
        this.Cabeza = cabeza;
        cabeza.addBox(0.0f, 0.0f, 0.0f, 8, 7, 8);
        this.Cabeza.setRotationPoint(-4.0f, 1.0f, -7.0f);
        this.Cabeza.setTextureSize(64, 32);
        this.Cabeza.mirror = true;
        this.setRotationAngle(this.Cabeza, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pierna_2 = new ModelRenderer(this, 30, 0);
        this.Pierna_2 = pierna_2;
        pierna_2.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Pierna_2.setRotationPoint(-2.3f, 17.0f, -3.3f);
        this.Pierna_2.setTextureSize(64, 32);
        this.Pierna_2.mirror = true;
        this.setRotationAngle(this.Pierna_2, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pitillo_1 = new ModelRenderer(this, 46, 0);
        this.Pitillo_1 = pitillo_1;
        pitillo_1.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Pitillo_1.setRotationPoint(0.0f, -1.0f, -6.0f);
        this.Pitillo_1.setTextureSize(64, 32);
        this.Pitillo_1.mirror = true;
        this.setRotationAngle(this.Pitillo_1, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pierna_3 = new ModelRenderer(this, 30, 0);
        this.Pierna_1 = pierna_3;
        pierna_3.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Pierna_1.setRotationPoint(1.3f, 17.0f, -3.3f);
        this.Pierna_1.setTextureSize(64, 32);
        this.Pierna_1.mirror = true;
        this.setRotationAngle(this.Pierna_1, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pitillo_2 = new ModelRenderer(this, 54, 0);
        this.Pitillo_2 = pitillo_2;
        pitillo_2.addBox(0.0f, 0.0f, 0.0f, 2, 4, 2);
        this.Pitillo_2.setRotationPoint(0.0f, -1.0f, -8.0f);
        this.Pitillo_2.setTextureSize(64, 32);
        this.Pitillo_2.mirror = true;
        this.setRotationAngle(this.Pitillo_2, 1.53589f, 0.0f, 0.0f);
        final ModelRenderer pie_4 = new ModelRenderer(this, 0, 0);
        this.Pie_1 = pie_4;
        pie_4.addBox(0.0f, 0.0f, 0.0f, 3, 2, 6);
        this.Pie_1.setRotationPoint(0.0f, 22.0f, -4.0f);
        this.Pie_1.setTextureSize(64, 32);
        this.Pie_1.mirror = true;
        this.setRotationAngle(this.Pie_1, 0.0f, 0.1047198f, 0.0f);
        final ModelRenderer pie_5 = new ModelRenderer(this, 0, 0);
        this.Pie_4 = pie_5;
        pie_5.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Pie_4.setRotationPoint(-3.0f, 21.0f, -4.0f);
        this.Pie_4.setTextureSize(64, 32);
        this.Pie_4.mirror = true;
        this.setRotationAngle(this.Pie_4, 0.0f, -0.1047198f, 0.0f);
        final ModelRenderer brazo_1 = new ModelRenderer(this, 23, 0);
        this.Brazo_1 = brazo_1;
        brazo_1.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_1.setRotationPoint(1.8f, 8.0f, -4.0f);
        this.Brazo_1.setTextureSize(64, 32);
        this.Brazo_1.mirror = true;
        this.setRotationAngle(this.Brazo_1, 0.0f, 0.0f, -0.7853982f);
        final ModelRenderer pie_6 = new ModelRenderer(this, 0, 0);
        this.Pie_2 = pie_6;
        pie_6.addBox(0.0f, 0.0f, 0.0f, 3, 2, 6);
        this.Pie_2.setRotationPoint(-3.0f, 22.0f, -4.0f);
        this.Pie_2.setTextureSize(64, 32);
        this.Pie_2.mirror = true;
        this.setRotationAngle(this.Pie_2, 0.0f, -0.1047198f, 0.0f);
        final ModelRenderer pantalon_2 = new ModelRenderer(this, 0, 13);
        this.Pantalon_2 = pantalon_2;
        pantalon_2.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Pantalon_2.setRotationPoint(-2.8f, 15.0f, -4.0f);
        this.Pantalon_2.setTextureSize(64, 32);
        this.Pantalon_2.mirror = true;
        this.setRotationAngle(this.Pantalon_2, 0.0f, 0.0f, 0.0f);
        final ModelRenderer pantalon_3 = new ModelRenderer(this, 0, 10);
        this.Pantalon_3 = pantalon_3;
        pantalon_3.addBox(0.0f, 0.0f, 0.0f, 6, 3, 4);
        this.Pantalon_3.setRotationPoint(-3.0f, 12.0f, -5.0f);
        this.Pantalon_3.setTextureSize(64, 32);
        this.Pantalon_3.mirror = true;
        this.setRotationAngle(this.Pantalon_3, 0.0f, 0.0f, 0.0f);
        final ModelRenderer brazo_2 = new ModelRenderer(this, 23, 0);
        this.Brazo_2 = brazo_2;
        brazo_2.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_2.setRotationPoint(4.0f, 10.0f, -4.0f);
        this.Brazo_2.setTextureSize(64, 32);
        this.Brazo_2.mirror = true;
        this.setRotationAngle(this.Brazo_2, 0.0f, 0.0f, -0.0174533f);
        final ModelRenderer brazo_3 = new ModelRenderer(this, 23, 0);
        this.Brazo_3 = brazo_3;
        brazo_3.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_3.setRotationPoint(-2.0f, 8.0f, -4.0f);
        this.Brazo_3.setTextureSize(64, 32);
        this.Brazo_3.mirror = true;
        this.setRotationAngle(this.Brazo_3, 0.0f, 0.0f, 0.9773844f);
        final ModelRenderer brazo_4 = new ModelRenderer(this, 23, 0);
        this.Brazo_4 = brazo_4;
        brazo_4.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_4.setRotationPoint(-5.0f, 10.0f, -4.0f);
        this.Brazo_4.setTextureSize(64, 32);
        this.Brazo_4.mirror = true;
        this.setRotationAngle(this.Brazo_4, 0.0f, 0.0f, 0.0698132f);
        final ModelRenderer guante_1 = new ModelRenderer(this, 71, 0);
        this.Guante_1 = guante_1;
        guante_1.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Guante_1.setRotationPoint(3.2f, 14.0f, -5.0f);
        this.Guante_1.setTextureSize(64, 32);
        this.Guante_1.mirror = true;
        this.setRotationAngle(this.Guante_1, 0.0f, 0.0f, 0.0f);
        final ModelRenderer guante_2 = new ModelRenderer(this, 71, 0);
        this.Guante_2 = guante_2;
        guante_2.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Guante_2.setRotationPoint(-6.4f, 14.0f, -5.0f);
        this.Guante_2.setTextureSize(64, 32);
        this.Guante_2.mirror = true;
        this.setRotationAngle(this.Guante_2, 0.0f, 0.0f, 0.0f);
        final ModelRenderer mano_1 = new ModelRenderer(this, 61, 27);
        this.Mano_1 = mano_1;
        mano_1.addBox(0.0f, 0.0f, 0.0f, 3, 3, 2);
        this.Mano_1.setRotationPoint(2.866667f, 15.0f, -4.0f);
        this.Mano_1.setTextureSize(64, 32);
        this.Mano_1.mirror = true;
        this.setRotationAngle(this.Mano_1, 0.0f, 0.3839724f, 0.0f);
        final ModelRenderer mano_2 = new ModelRenderer(this, 61, 33);
        this.Mano_2 = mano_2;
        mano_2.addBox(0.0f, 0.0f, 0.0f, 3, 3, 2);
        this.Mano_2.setRotationPoint(-6.0f, 15.0f, -5.0f);
        this.Mano_2.setTextureSize(64, 32);
        this.Mano_2.mirror = true;
        this.setRotationAngle(this.Mano_2, 0.0f, -0.3839724f, 0.0f);
        this.textureWidth = 100;
        this.textureHeight = 80;
        final ModelRenderer footRight = new ModelRenderer(this, 22, 39);
        this.footRight = footRight;
        footRight.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.footRight.addBox(-2.5f, 0.0f, -6.0f, 5, 3, 8, 0.0f);
        this.setRotationAngle(this.footRight, -0.034906585f, 0.0f, 0.0f);
        final ModelRenderer earRight = new ModelRenderer(this, 8, 0);
        this.earRight = earRight;
        earRight.setRotationPoint(-4.5f, -5.5f, 0.0f);
        this.earRight.addBox(-1.0f, -3.0f, -0.5f, 2, 3, 1, 0.0f);
        this.setRotationAngle(this.earRight, 0.05235988f, 0.0f, -1.0471976f);
        final ModelRenderer legLeftpad = new ModelRenderer(this, 48, 39);
        this.legLeftpad = legLeftpad;
        legLeftpad.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legLeftpad.addBox(-3.0f, 0.0f, -3.0f, 6, 9, 6, 0.0f);
        final ModelRenderer earRightpad_1 = new ModelRenderer(this, 40, 39);
        this.earRightpad_1 = earRightpad_1;
        earRightpad_1.setRotationPoint(0.0f, -1.0f, 0.0f);
        this.earRightpad_1.addBox(-2.0f, -5.0f, -1.0f, 4, 4, 2, 0.0f);
        final ModelRenderer legLeft = new ModelRenderer(this, 54, 10);
        this.legLeft = legLeft;
        legLeft.setRotationPoint(3.3f, 12.5f, 0.0f);
        this.legLeft.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        final ModelRenderer armRightpad2 = new ModelRenderer(this, 0, 26);
        this.armRightpad2 = armRightpad2;
        armRightpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armRightpad2.addBox(-2.5f, 0.0f, -2.5f, 5, 7, 5, 0.0f);
        final ModelRenderer handLeft = new ModelRenderer(this, 58, 56);
        this.handLeft = handLeft;
        handLeft.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.handLeft.addBox(-2.0f, 0.0f, -2.5f, 4, 4, 5, 0.0f);
        this.setRotationAngle(this.handLeft, 0.0f, 0.0f, 0.05235988f);
        final ModelRenderer armLeft = new ModelRenderer(this, 62, 10);
        this.armLeft = armLeft;
        armLeft.setRotationPoint(6.5f, -8.0f, 0.0f);
        this.armLeft.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        this.setRotationAngle(this.armLeft, 0.0f, 0.0f, -0.2617994f);
        final ModelRenderer legRight = new ModelRenderer(this, 90, 8);
        this.legRight = legRight;
        legRight.setRotationPoint(-3.3f, 12.5f, 0.0f);
        this.legRight.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        final ModelRenderer armLeft2 = new ModelRenderer(this, 90, 48);
        this.armLeft2 = armLeft2;
        armLeft2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.armLeft2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.armLeft2, -0.17453292f, 0.0f, 0.0f);
        final ModelRenderer legRight2 = new ModelRenderer(this, 20, 35);
        this.legRight2 = legRight2;
        legRight2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.legRight2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.legRight2, 0.034906585f, 0.0f, 0.0f);
        final ModelRenderer armLeftpad2 = new ModelRenderer(this, 0, 58);
        this.armLeftpad2 = armLeftpad2;
        armLeftpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armLeftpad2.addBox(-2.5f, 0.0f, -2.5f, 5, 7, 5, 0.0f);
        final ModelRenderer legLeft2 = new ModelRenderer(this, 72, 48);
        this.legLeft2 = legLeft2;
        legLeft2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.legLeft2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.legLeft2, 0.034906585f, 0.0f, 0.0f);
        final ModelRenderer hat = new ModelRenderer(this, 70, 24);
        this.hat = hat;
        hat.setRotationPoint(0.0f, -8.4f, 0.0f);
        this.hat.addBox(-3.0f, -0.5f, -3.0f, 6, 1, 6, 0.0f);
        this.setRotationAngle(this.hat, -0.017453292f, 0.0f, 0.0f);
        final ModelRenderer earRightpad = new ModelRenderer(this, 85, 0);
        this.earRightpad = earRightpad;
        earRightpad.setRotationPoint(0.0f, -1.0f, 0.0f);
        this.earRightpad.addBox(-2.0f, -5.0f, -1.0f, 4, 4, 2, 0.0f);
        final ModelRenderer crotch = new ModelRenderer(this, 56, 0);
        this.crotch = crotch;
        crotch.setRotationPoint(0.0f, 9.5f, 0.0f);
        this.crotch.addBox(-5.5f, 0.0f, -3.5f, 11, 3, 7, 0.0f);
        final ModelRenderer torso = new ModelRenderer(this, 8, 0);
        this.torso = torso;
        torso.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.torso.addBox(-6.0f, -9.0f, -4.0f, 12, 18, 8, 0.0f);
        this.setRotationAngle(this.torso, 0.017453292f, 0.0f, 0.0f);
        final ModelRenderer armRight2 = new ModelRenderer(this, 90, 20);
        this.armRight2 = armRight2;
        armRight2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.armRight2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.armRight2, -0.17453292f, 0.0f, 0.0f);
        final ModelRenderer handRight = new ModelRenderer(this, 20, 26);
        this.handRight = handRight;
        handRight.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.handRight.addBox(-2.0f, 0.0f, -2.5f, 4, 4, 5, 0.0f);
        this.setRotationAngle(this.handRight, 0.0f, 0.0f, -0.05235988f);
        final ModelRenderer fredbody = new ModelRenderer(this, 0, 0);
        this.fredbody = fredbody;
        fredbody.setRotationPoint(0.0f, -9.0f, 0.0f);
        this.fredbody.addBox(-1.0f, -14.0f, -1.0f, 2, 24, 2, 0.0f);
        final ModelRenderer fredhead = new ModelRenderer(this, 39, 22);
        this.fredhead = fredhead;
        fredhead.setRotationPoint(0.0f, -13.0f, -0.5f);
        this.fredhead.addBox(-5.5f, -8.0f, -4.5f, 11, 8, 9, 0.0f);
        final ModelRenderer legRightpad = new ModelRenderer(this, 73, 33);
        this.legRightpad = legRightpad;
        legRightpad.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legRightpad.addBox(-3.0f, 0.0f, -3.0f, 6, 9, 6, 0.0f);
        final ModelRenderer frednose = new ModelRenderer(this, 17, 67);
        this.frednose = frednose;
        frednose.setRotationPoint(0.0f, -2.0f, -4.5f);
        this.frednose.addBox(-4.0f, -2.0f, -3.0f, 8, 4, 3, 0.0f);
        final ModelRenderer legLeftpad2 = new ModelRenderer(this, 16, 50);
        this.legLeftpad2 = legLeftpad2;
        legLeftpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legLeftpad2.addBox(-2.5f, 0.0f, -3.0f, 5, 7, 6, 0.0f);
        final ModelRenderer armRightpad3 = new ModelRenderer(this, 70, 10);
        this.armRightpad = armRightpad3;
        armRightpad3.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armRightpad.addBox(-2.5f, 0.0f, -2.5f, 5, 9, 5, 0.0f);
        final ModelRenderer armLeftpad3 = new ModelRenderer(this, 38, 54);
        this.armLeftpad = armLeftpad3;
        armLeftpad3.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armLeftpad.addBox(-2.5f, 0.0f, -2.5f, 5, 9, 5, 0.0f);
        final ModelRenderer hat2 = new ModelRenderer(this, 78, 61);
        this.hat2 = hat2;
        hat2.setRotationPoint(0.0f, 0.1f, 0.0f);
        this.hat2.addBox(-2.0f, -4.0f, -2.0f, 4, 4, 4, 0.0f);
        this.setRotationAngle(this.hat2, -0.017453292f, 0.0f, 0.0f);
        final ModelRenderer legRightpad2 = new ModelRenderer(this, 0, 39);
        this.legRightpad2 = legRightpad2;
        legRightpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legRightpad2.addBox(-2.5f, 0.0f, -3.0f, 5, 7, 6, 0.0f);
        final ModelRenderer jaw = new ModelRenderer(this, 49, 65);
        this.jaw = jaw;
        jaw.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.jaw.addBox(-5.0f, 0.0f, -4.5f, 10, 3, 9, 0.0f);
        this.setRotationAngle(this.jaw, 0.08726646f, 0.0f, 0.0f);
        final ModelRenderer armRight3 = new ModelRenderer(this, 48, 0);
        this.armRight = armRight3;
        armRight3.setRotationPoint(-6.5f, -8.0f, 0.0f);
        this.armRight.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        this.setRotationAngle(this.armRight, 0.0f, 0.0f, 0.2617994f);
        final ModelRenderer footLeft = new ModelRenderer(this, 72, 50);
        this.footLeft = footLeft;
        footLeft.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.footLeft.addBox(-2.5f, 0.0f, -6.0f, 5, 3, 8, 0.0f);
        this.setRotationAngle(this.footLeft, -0.034906585f, 0.0f, 0.0f);
        final ModelRenderer earLeft = new ModelRenderer(this, 40, 0);
        this.earLeft = earLeft;
        earLeft.setRotationPoint(4.5f, -5.5f, 0.0f);
        this.earLeft.addBox(-1.0f, -3.0f, -0.5f, 2, 3, 1, 0.0f);
        this.setRotationAngle(this.earLeft, 0.05235988f, 0.0f, 1.0471976f);
        this.legRight2.addChild(this.footRight);
        this.fredhead.addChild(this.earRight);
        this.legLeft.addChild(this.legLeftpad);
        this.earLeft.addChild(this.earRightpad_1);
        this.fredbody.addChild(this.legLeft);
        this.armRight2.addChild(this.armRightpad2);
        this.armLeft2.addChild(this.handLeft);
        this.fredbody.addChild(this.armLeft);
        this.fredbody.addChild(this.legRight);
        this.armLeft.addChild(this.armLeft2);
        this.legRight.addChild(this.legRight2);
        this.armLeft2.addChild(this.armLeftpad2);
        this.legLeft.addChild(this.legLeft2);
        this.fredhead.addChild(this.hat);
        this.earRight.addChild(this.earRightpad);
        this.fredbody.addChild(this.crotch);
        this.fredbody.addChild(this.torso);
        this.armRight.addChild(this.armRight2);
        this.armRight2.addChild(this.handRight);
        this.fredbody.addChild(this.fredhead);
        this.legRight.addChild(this.legRightpad);
        this.fredhead.addChild(this.frednose);
        this.legLeft2.addChild(this.legLeftpad2);
        this.armRight.addChild(this.armRightpad);
        this.armLeft.addChild(this.armLeftpad);
        this.hat.addChild(this.hat2);
        this.legRight2.addChild(this.legRightpad2);
        this.fredhead.addChild(this.jaw);
        this.fredbody.addChild(this.armRight);
        this.legLeft2.addChild(this.footLeft);
        this.fredhead.addChild(this.earLeft);
    }
    
    @Override
    public void render(final Entity lllllllllllIlIllIllllIlllllIIlIl, final float lllllllllllIlIllIllllIlllllIIlII, final float lllllllllllIlIllIllllIlllllIIIll, final float lllllllllllIlIllIllllIlllllIIIlI, final float lllllllllllIlIllIllllIlllllIIIIl, final float lllllllllllIlIllIllllIlllllIIIII, final float lllllllllllIlIllIllllIllllIIlIIl) {
        GlStateManager.pushMatrix();
        Label_4513: {
            Label_4357: {
                if (CustomModel.onlyMe.getBoolValue() && lllllllllllIlIllIllllIlllllIIlIl != Minecraft.getMinecraft().player) {
                    final FriendManager friendManager = Main.instance.friendManager;
                    if (!FriendManager.isFriend(lllllllllllIlIllIllllIlllllIIlIl.getName()) || !CustomModel.friends.getBoolValue()) {
                        break Label_4357;
                    }
                }
                if (!CustomModel.modelMode.currentMode.equals("None") && Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled()) {
                    if (CustomModel.modelMode.currentMode.equals("Amogus")) {
                        final boolean lllllllllllIlIllIllllIllllIllllI = lllllllllllIlIllIllllIlllllIIlIl instanceof EntityLivingBase && ((EntityLivingBase)lllllllllllIlIllIllllIlllllIIlIl).getTicksElytraFlying() > 4;
                        this.bipedHead.rotateAngleY = lllllllllllIlIllIllllIlllllIIIIl * 0.017453292f;
                        if (lllllllllllIlIllIllllIllllIllllI) {
                            this.bipedHead.rotateAngleX = -0.7853982f;
                        }
                        else {
                            this.bipedHead.rotateAngleX = lllllllllllIlIllIllllIlllllIIIII * 0.017453292f;
                        }
                        this.bipedBody.rotateAngleY = 0.0f;
                        this.bipedRightArm.rotationPointZ = 0.0f;
                        this.bipedRightArm.rotationPointX = -5.0f;
                        this.bipedLeftArm.rotationPointZ = 0.0f;
                        this.bipedLeftArm.rotationPointX = 5.0f;
                        float lllllllllllIlIllIllllIllllIlllIl = 1.0f;
                        if (lllllllllllIlIllIllllIllllIllllI) {
                            lllllllllllIlIllIllllIllllIlllIl = (float)(lllllllllllIlIllIllllIlllllIIlIl.motionX * lllllllllllIlIllIllllIlllllIIlIl.motionX + lllllllllllIlIllIllllIlllllIIlIl.motionY * lllllllllllIlIllIllllIlllllIIlIl.motionY + lllllllllllIlIllIllllIlllllIIlIl.motionZ * lllllllllllIlIllIllllIlllllIIlIl.motionZ);
                            lllllllllllIlIllIllllIllllIlllIl /= 0.2f;
                            lllllllllllIlIllIllllIllllIlllIl *= lllllllllllIlIllIllllIllllIlllIl * lllllllllllIlIllIllllIllllIlllIl;
                        }
                        if (lllllllllllIlIllIllllIllllIlllIl < 1.0f) {
                            lllllllllllIlIllIllllIllllIlllIl = 1.0f;
                        }
                        this.bipedRightArm.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f + 3.1415927f) * 2.0f * lllllllllllIlIllIllllIlllllIIIll * 0.5f / lllllllllllIlIllIllllIllllIlllIl;
                        this.bipedLeftArm.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f) * 2.0f * lllllllllllIlIllIllllIlllllIIIll * 0.5f / lllllllllllIlIllIllllIllllIlllIl;
                        this.bipedRightArm.rotateAngleZ = 0.0f;
                        this.bipedLeftArm.rotateAngleZ = 0.0f;
                        this.right_leg.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll / lllllllllllIlIllIllllIllllIlllIl;
                        this.left_leg.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f + 3.1415927f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll / lllllllllllIlIllIllllIllllIlllIl;
                        this.right_leg.rotateAngleY = 0.0f;
                        this.left_leg.rotateAngleY = 0.0f;
                        this.right_leg.rotateAngleZ = 0.0f;
                        this.left_leg.rotateAngleZ = 0.0f;
                        final int lllllllllllIlIllIllllIllllIlllII = CustomModel.bodyCustomColor.getColorValue();
                        int lllllllllllIlIllIllllIllllIllIll = 0;
                        final String lllllllllllIlIllIllllIllllIllIlI = CustomModel.bodyColor.currentMode;
                        final float lllllllllllIlIllIllllIllllIIIIll;
                        switch (((String)(lllllllllllIlIllIllllIllllIIIIll = (float)lllllllllllIlIllIllllIllllIllIlI)).hashCode()) {
                            case -1656737386: {
                                if (!((String)lllllllllllIlIllIllllIllllIIIIll).equals("Rainbow")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIll = PalatteHelper.rainbow2(30, 1.0f, 1.0f).getRGB();
                                break;
                            }
                            case 961091784: {
                                if (!((String)lllllllllllIlIllIllllIllllIIIIll).equals("Astolfo")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIll = PalatteHelper.astolfo(5000.0f, 1).getRGB();
                                break;
                            }
                            case 2021122027: {
                                if (!((String)lllllllllllIlIllIllllIllllIIIIll).equals("Client")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIll = ClientHelper.getClientColor().getRGB();
                                break;
                            }
                            case 2029746065: {
                                if (!((String)lllllllllllIlIllIllllIllllIIIIll).equals("Custom")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIll = lllllllllllIlIllIllllIllllIlllII;
                                break;
                            }
                        }
                        final int lllllllllllIlIllIllllIllllIllIIl = CustomModel.eyeCustomColor.getColorValue();
                        int lllllllllllIlIllIllllIllllIllIII = 0;
                        final String lllllllllllIlIllIllllIllllIlIlll = CustomModel.eyeColor.currentMode;
                        final char lllllllllllIlIllIllllIlllIllllll;
                        switch (((String)(lllllllllllIlIllIllllIlllIllllll = (char)lllllllllllIlIllIllllIllllIlIlll)).hashCode()) {
                            case -1656737386: {
                                if (!((String)lllllllllllIlIllIllllIlllIllllll).equals("Rainbow")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIII = PalatteHelper.rainbow2(30, 1.0f, 1.0f).getRGB();
                                break;
                            }
                            case 961091784: {
                                if (!((String)lllllllllllIlIllIllllIlllIllllll).equals("Astolfo")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIII = PalatteHelper.astolfo(5000.0f, 1).getRGB();
                                break;
                            }
                            case 2021122027: {
                                if (!((String)lllllllllllIlIllIllllIlllIllllll).equals("Client")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIII = ClientHelper.getClientColor().getRGB();
                                break;
                            }
                            case 2029746065: {
                                if (!((String)lllllllllllIlIllIllllIlllIllllll).equals("Custom")) {
                                    break;
                                }
                                lllllllllllIlIllIllllIllllIllIII = lllllllllllIlIllIllllIllllIllIIl;
                                break;
                            }
                        }
                        final int lllllllllllIlIllIllllIllllIlIllI = CustomModel.legsCustomColor.getColorValue();
                        int lllllllllllIlIllIllllIllllIlIlIl = 0;
                        final String lllllllllllIlIllIllllIllllIlIlII = CustomModel.legsColor.currentMode;
                        final Exception lllllllllllIlIllIllllIlllIlllIll;
                        switch (lllllllllllIlIllIllllIlllIlllIll = (Exception)lllllllllllIlIllIllllIllllIlIlII) {
                            case "Rainbow": {
                                lllllllllllIlIllIllllIllllIlIlIl = PalatteHelper.rainbow2(30, 1.0f, 1.0f).getRGB();
                                break;
                            }
                            case "Astolfo": {
                                lllllllllllIlIllIllllIllllIlIlIl = PalatteHelper.astolfo(5000.0f, 1).getRGB();
                                break;
                            }
                            case "Client": {
                                lllllllllllIlIllIllllIllllIlIlIl = ClientHelper.getClientColor().getRGB();
                                break;
                            }
                            case "Custom": {
                                lllllllllllIlIllIllllIllllIlIlIl = lllllllllllIlIllIllllIllllIlIllI;
                                break;
                            }
                            default:
                                break;
                        }
                        if (CustomModel.friendHighlight.getBoolValue()) {
                            final FriendManager friendManager2 = Main.instance.friendManager;
                            if (FriendManager.isFriend(lllllllllllIlIllIllllIlllllIIlIl.getName())) {
                                lllllllllllIlIllIllllIllllIllIll = Color.GREEN.getRGB();
                                lllllllllllIlIllIllllIllllIllIII = Color.WHITE.getRGB();
                                lllllllllllIlIllIllllIllllIlIlIl = Color.GREEN.getRGB();
                            }
                        }
                        if (this.isChild) {
                            GlStateManager.scale(0.5f, 0.5f, 0.5f);
                            GlStateManager.translate(0.0f, 24.0f * lllllllllllIlIllIllllIllllIIlIIl, 0.0f);
                            this.body.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.left_leg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.right_leg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            break Label_4513;
                        }
                        GlStateManager.translate(0.0, -0.8, 0.0);
                        GlStateManager.scale(1.8, 1.6, 1.6);
                        RenderHelper.color(lllllllllllIlIllIllllIllllIllIll);
                        GlStateManager.translate(0.0, 0.15, 0.0);
                        this.body.render(lllllllllllIlIllIllllIllllIIlIIl);
                        RenderHelper.color(lllllllllllIlIllIllllIllllIllIII);
                        this.eye.render(lllllllllllIlIllIllllIllllIIlIIl);
                        RenderHelper.color(lllllllllllIlIllIllllIllllIlIlIl);
                        GlStateManager.translate(0.0, -0.15, 0.0);
                        this.left_leg.render(lllllllllllIlIllIllllIllllIIlIIl);
                        this.right_leg.render(lllllllllllIlIllIllllIllllIIlIIl);
                        GlStateManager.color(1.0f, 1.0f, 1.0f, 1.0f);
                        break Label_4513;
                    }
                    else {
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Jeff Killer")) {
                            this.Head.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.Head.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.Head.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.LeftArm.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                            this.LeftArm.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                            this.LeftArm.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                            this.RightLeg.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                            this.RightLeg.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                            this.RightLeg.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                            this.LeftLeg.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                            this.LeftLeg.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                            this.LeftLeg.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                            this.RightLeg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftLeg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Body.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.RightArm.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Head.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftArm.render(lllllllllllIlIllIllllIllllIIlIIl);
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Crab")) {
                            this.bone.render(lllllllllllIlIllIllllIllllIIlIIl);
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Crazy Rabbit")) {
                            GlStateManager.pushMatrix();
                            GlStateManager.scale(1.25, 1.25, 1.25);
                            GlStateManager.translate(0.0, -0.3, 0.0);
                            this.rabbitHead.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.rabbitHead.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.rabbitHead.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.rabbitLarm.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                            this.rabbitLarm.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                            this.rabbitLarm.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                            this.rabbitRarm.rotateAngleX = this.bipedRightArm.rotateAngleX;
                            this.rabbitRarm.rotateAngleY = this.bipedRightArm.rotateAngleY;
                            this.rabbitRarm.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                            this.rabbitRleg.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                            this.rabbitRleg.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                            this.rabbitRleg.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                            this.rabbitLleg.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                            this.rabbitLleg.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                            this.rabbitLleg.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                            this.rabbitBone.render(lllllllllllIlIllIllllIllllIIlIIl);
                            GlStateManager.popMatrix();
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Sonic")) {
                            GlStateManager.pushMatrix();
                            GlStateManager.scale(1.3, 1.3, 1.3);
                            GlStateManager.translate(0.0, -0.35, 0.0);
                            this.sonicHead.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.sonicHead.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.sonicHead.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.Larm.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                            this.Larm.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                            this.Larm.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                            this.Rarm.rotateAngleX = this.bipedRightArm.rotateAngleX;
                            this.Rarm.rotateAngleY = this.bipedRightArm.rotateAngleY;
                            this.Rarm.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                            this.Rleg.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                            this.Rleg.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                            this.Rleg.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                            this.Lleg.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                            this.Lleg.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                            this.Lleg.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                            this.sonicHead.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.bb_main.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Rleg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Lleg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Larm.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Rarm.render(lllllllllllIlIllIllllIllllIIlIIl);
                            GlStateManager.popMatrix();
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("CupHead")) {
                            GlStateManager.pushMatrix();
                            GlStateManager.rotate(180.0f, 0.0f, -1.0f, 0.0f);
                            GlStateManager.scale(1.4, 1.4, 1.4);
                            GlStateManager.translate(0.0, -0.45, 0.0);
                            this.Agarrador_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Agarrador_3.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Cuerpo.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pie_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pie_3.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pie_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pie_4.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Agarrador_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pantalon_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Cabeza.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pierna_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pitillo_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pierna_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pitillo_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Brazo_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pantalon_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Pantalon_3.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Brazo_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Brazo_3.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Brazo_4.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Guante_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Guante_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Mano_1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Mano_2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            GlStateManager.popMatrix();
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Freddy Bear")) {
                            this.fredhead.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.fredhead.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.fredhead.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.armLeft.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                            this.armLeft.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                            this.armLeft.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                            this.legRight.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                            this.legRight.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                            this.legRight.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                            this.legLeft.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                            this.legLeft.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                            this.legLeft.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                            this.armRight.rotateAngleX = this.bipedRightArm.rotateAngleX;
                            this.armRight.rotateAngleY = this.bipedRightArm.rotateAngleY;
                            this.armRight.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                            GlStateManager.pushMatrix();
                            GlStateManager.scale(0.75, 0.65, 0.75);
                            GlStateManager.translate(0.0, 0.85, 0.0);
                            this.fredbody.render(lllllllllllIlIllIllllIllllIIlIIl);
                            GlStateManager.popMatrix();
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Chinchilla")) {
                            GlStateManager.pushMatrix();
                            GlStateManager.scale(1.4, 1.4, 1.4);
                            GlStateManager.translate(0.0, -0.45, 0.0);
                            final float lllllllllllIlIllIllllIllllIlIIll = lllllllllllIlIllIllllIlllllIIlII;
                            final float lllllllllllIlIllIllllIllllIlIIlI = lllllllllllIlIllIllllIlllllIIIll;
                            this.chinHead.rotateAngleY = lllllllllllIlIllIllllIlllllIIIIl / 57.295776f;
                            this.Chin.rotateAngleY = this.chinHead.rotateAngleY;
                            this.Nose.rotateAngleY = this.chinHead.rotateAngleY;
                            this.RightEar.rotateAngleY = this.chinHead.rotateAngleY + 2.094395f;
                            this.LeftEar.rotateAngleY = this.chinHead.rotateAngleY + 1.047198f;
                            this.LeftEye.rotateAngleY = this.chinHead.rotateAngleY - 1.047198f;
                            this.RightEye.rotateAngleY = this.chinHead.rotateAngleY + 1.047198f;
                            this.LeftFrontLeg.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.2f + 3.1415927f) * 1.3f * lllllllllllIlIllIllllIllllIlIIlI - 0.1858931f;
                            this.RightFrontLeg.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.2f + 3.1415927f) * 1.3f * lllllllllllIlIllIllllIllllIlIIlI - 0.1858931f;
                            this.LeftFrontFoot.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.2f + 3.1415927f) * 1.3f * lllllllllllIlIllIllllIllllIlIIlI;
                            this.RightFrontFoot.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.2f + 3.1415927f) * 1.3f * lllllllllllIlIllIllllIllllIlIIlI;
                            this.LeftRearFoot.rotateAngleX = -MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.2f + 3.1415927f) * 1.1f * lllllllllllIlIllIllllIllllIlIIlI;
                            this.RightRearFoot.rotateAngleX = -MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.2f + 3.1415927f) * 1.1f * lllllllllllIlIllIllllIllllIlIIlI;
                            this.LowerTail.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.0f + 3.1415927f) * 0.2f * lllllllllllIlIllIllllIllllIlIIlI - 0.1047198f;
                            this.UpperTail.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIllllIlIIll * 1.0f + 3.1415927f) * 0.2f * lllllllllllIlIllIllllIllllIlIIlI + 0.7330383f;
                            this.LeftWhiskers.rotateAngleY = this.chinHead.rotateAngleY - 0.1745329f;
                            this.RightWhiskers.rotateAngleY = this.chinHead.rotateAngleY + 0.1745329f;
                            this.Back.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Nose.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.RightEar.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.RightWhiskers.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftEar.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.UpperTail.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.chinBody.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LowerTail.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.RightRearFoot.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftRearFoot.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.RightFrontLeg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.RightFrontFoot.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftFrontLeg.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftFrontFoot.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.Chin.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.LeftWhiskers.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.chinHead.render(lllllllllllIlIllIllllIllllIIlIIl);
                            GlStateManager.popMatrix();
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Demon")) {
                            this.head7.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.head7.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.head7.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.right_leg7.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                            this.right_leg7.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                            this.right_leg7.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                            this.left_leg7.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                            this.left_leg7.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                            this.left_leg7.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                            this.left_arm7.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                            this.left_arm7.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                            this.left_arm7.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                            this.right_arm7.rotateAngleX = this.bipedRightArm.rotateAngleX;
                            this.right_arm7.rotateAngleY = this.bipedRightArm.rotateAngleY;
                            this.right_arm7.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                            this.head7.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.left_horn.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.right_horn.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.body7.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.left_wing.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.right_wing.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.left_arm7.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.right_arm7.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.left_leg7.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.right_leg7.render(lllllllllllIlIllIllllIllllIIlIIl);
                            break Label_4513;
                        }
                        if (Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() && CustomModel.modelMode.currentMode.equals("Red Panda")) {
                            this.head.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.head.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.head.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.nose.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.nose.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.nose.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.ear1.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.ear1.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.ear1.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            this.ear2.rotateAngleX = this.bipedHead.rotateAngleX;
                            this.ear2.rotateAngleY = this.bipedHead.rotateAngleY;
                            this.ear2.rotateAngleZ = this.bipedHead.rotateAngleZ;
                            if (lllllllllllIlIllIllllIlllllIIlIl.isSneaking()) {
                                this.bodyfront.rotateAngleX = -0.0872665f;
                                this.bodyback.setRotationPoint(-5.0f, 11.5f, 3.0f);
                                this.bodyback.rotateAngleX = -0.6108652f;
                                this.tail.setRotationPoint(0.0f, 19.0f, 8.0f);
                                this.tail.rotateAngleX = -0.0872665f;
                                this.leg1.rotateAngleX = 0.0f;
                                this.foot1.rotateAngleX = 0.0f;
                                this.leg2.rotateAngleX = 0.0f;
                                this.foot2.rotateAngleX = 0.0f;
                                this.leg3.setRotationPoint(1.5f, 22.0f, 9.0f);
                                this.foot3.setRotationPoint(1.5f, 16.0f, 3.0f);
                                this.leg4.setRotationPoint(-1.5f, 22.0f, 9.0f);
                                this.foot4.setRotationPoint(-1.5f, 16.0f, 3.0f);
                                this.leg3.rotateAngleX = -1.570796f;
                                this.foot3.rotateAngleX = 0.0f;
                                this.leg4.rotateAngleX = -1.570796f;
                                this.foot4.rotateAngleX = 0.0f;
                            }
                            else {
                                this.bodyfront.rotateAngleX = 0.0872665f;
                                this.bodyback.setRotationPoint(-5.0f, 10.0f, 3.0f);
                                this.bodyback.rotateAngleX = -0.0872665f;
                                this.tail.setRotationPoint(0.0f, 14.0f, 11.0f);
                                this.leg3.setRotationPoint(1.5f, 16.0f, 9.0f);
                                this.foot3.setRotationPoint(1.5f, 16.0f, 9.0f);
                                this.leg4.setRotationPoint(-1.5f, 16.0f, 9.0f);
                                this.foot4.setRotationPoint(-1.5f, 16.0f, 9.0f);
                                this.leg1.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.foot1.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.leg2.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f + 3.1415927f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.foot2.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f + 3.1415927f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.leg3.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.foot3.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.leg4.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f + 3.1415927f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                                this.foot4.rotateAngleX = MathHelper.cos(lllllllllllIlIllIllllIlllllIIlII * 0.6662f + 3.1415927f) * 1.4f * lllllllllllIlIllIllllIlllllIIIll;
                            }
                            this.head.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.nose.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.ear1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.ear2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.bodyfront.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.bodyback.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.leg1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.foot1.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.leg2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.foot2.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.leg3.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.foot3.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.leg4.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.foot4.render(lllllllllllIlIllIllllIllllIIlIIl);
                            this.tail.render(lllllllllllIlIllIllllIllllIIlIIl);
                        }
                        break Label_4513;
                    }
                }
            }
            super.render(lllllllllllIlIllIllllIlllllIIlIl, lllllllllllIlIllIllllIlllllIIlII, lllllllllllIlIllIllllIlllllIIIll, lllllllllllIlIllIllllIlllllIIIlI, lllllllllllIlIllIllllIlllllIIIIl, lllllllllllIlIllIllllIlllllIIIII, lllllllllllIlIllIllllIllllIIlIIl);
            if (this.isChild) {
                final float lllllllllllIlIllIllllIllllIlIIIl = 2.0f;
                GlStateManager.scale(0.5f, 0.5f, 0.5f);
                GlStateManager.translate(0.0f, 24.0f * lllllllllllIlIllIllllIllllIIlIIl, 0.0f);
                this.bipedLeftLegwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedRightLegwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedLeftArmwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedRightArmwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedBodyWear.render(lllllllllllIlIllIllllIllllIIlIIl);
            }
            else {
                if (lllllllllllIlIllIllllIlllllIIlIl.isSneaking()) {
                    GlStateManager.translate(0.0f, 0.2f, 0.0f);
                }
                this.bipedLeftLegwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedRightLegwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedLeftArmwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedRightArmwear.render(lllllllllllIlIllIllllIllllIIlIIl);
                this.bipedBodyWear.render(lllllllllllIlIllIllllIllllIIlIIl);
            }
        }
        GlStateManager.popMatrix();
    }
    
    public void renderDeadmau5Head(final float lllllllllllIlIllIllllIlllIlIlIII) {
        ModelBase.copyModelAngles(this.bipedHead, this.bipedDeadmau5Head);
        this.bipedDeadmau5Head.rotationPointX = 0.0f;
        this.bipedDeadmau5Head.rotationPointY = 0.0f;
        this.bipedDeadmau5Head.render(lllllllllllIlIllIllllIlllIlIlIII);
    }
    
    public void renderCape(final float lllllllllllIlIllIllllIlllIlIIIlI) {
        if (!Main.featureDirector.getFeatureByClass(CustomModel.class).isToggled() || (!CustomModel.modelMode.currentMode.equals("Werewolf") && !CustomModel.modelMode.currentMode.equals("Crazy Rabbit") && !CustomModel.modelMode.currentMode.equals("Sonic") && !CustomModel.modelMode.currentMode.equals("CupHead") && !CustomModel.modelMode.currentMode.equals("Chinchilla") && !CustomModel.modelMode.currentMode.equals("Freddy Bear") && !CustomModel.modelMode.currentMode.equals("Amogus") && !CustomModel.modelMode.currentMode.equals("Demon") && !CustomModel.modelMode.currentMode.equals("Red Panda") && !CustomModel.modelMode.currentMode.equals("Crab") && !CustomModel.modelMode.currentMode.equals("Jeff Killer"))) {
            this.bipedCape.render(lllllllllllIlIllIllllIlllIlIIIlI);
        }
    }
    
    @Override
    public void postRenderArm(final float lllllllllllIlIllIllllIllIllllIll, final EnumHandSide lllllllllllIlIllIllllIllIlllIIll) {
        final ModelRenderer lllllllllllIlIllIllllIllIllllIIl = this.getArmForSide(lllllllllllIlIllIllllIllIlllIIll);
        if (this.smallArms) {
            final float lllllllllllIlIllIllllIllIllllIII = 0.5f * ((lllllllllllIlIllIllllIllIlllIIll == EnumHandSide.RIGHT) ? 1 : -1);
            final ModelRenderer modelRenderer;
            final ModelRenderer lllllllllllIlIllIllllIllIlllIlll = modelRenderer = lllllllllllIlIllIllllIllIllllIIl;
            modelRenderer.rotationPointX += lllllllllllIlIllIllllIllIllllIII;
            lllllllllllIlIllIllllIllIllllIIl.postRender(lllllllllllIlIllIllllIllIllllIll);
            final ModelRenderer modelRenderer2;
            final ModelRenderer lllllllllllIlIllIllllIllIlllIllI = modelRenderer2 = lllllllllllIlIllIllllIllIllllIIl;
            modelRenderer2.rotationPointX -= lllllllllllIlIllIllllIllIllllIII;
        }
        else {
            lllllllllllIlIllIllllIllIllllIIl.postRender(lllllllllllIlIllIllllIllIllllIll);
        }
    }
    
    @Override
    public void setRotationAngles(final float lllllllllllIlIllIllllIlllIIllIII, final float lllllllllllIlIllIllllIlllIIlIlll, final float lllllllllllIlIllIllllIlllIIIlllI, final float lllllllllllIlIllIllllIlllIIlIlIl, final float lllllllllllIlIllIllllIlllIIIllII, final float lllllllllllIlIllIllllIlllIIIlIll, final Entity lllllllllllIlIllIllllIlllIIIlIlI) {
        super.setRotationAngles(lllllllllllIlIllIllllIlllIIllIII, lllllllllllIlIllIllllIlllIIlIlll, lllllllllllIlIllIllllIlllIIIlllI, lllllllllllIlIllIllllIlllIIlIlIl, lllllllllllIlIllIllllIlllIIIllII, lllllllllllIlIllIllllIlllIIIlIll, lllllllllllIlIllIllllIlllIIIlIlI);
        ModelBase.copyModelAngles(this.bipedLeftLeg, this.bipedLeftLegwear);
        ModelBase.copyModelAngles(this.bipedRightLeg, this.bipedRightLegwear);
        ModelBase.copyModelAngles(this.bipedLeftArm, this.bipedLeftArmwear);
        ModelBase.copyModelAngles(this.bipedRightArm, this.bipedRightArmwear);
        ModelBase.copyModelAngles(this.bipedBody, this.bipedBodyWear);
    }
    
    protected float rotlerpRad(final float lllllllllllIlIllIllllIllIllIlIIl, final float lllllllllllIlIllIllllIllIllIIlII, final float lllllllllllIlIllIllllIllIllIIIll) {
        float lllllllllllIlIllIllllIllIllIIllI = (lllllllllllIlIllIllllIllIllIIlII - lllllllllllIlIllIllllIllIllIlIIl) % 6.2831855f;
        if (lllllllllllIlIllIllllIllIllIIllI < -3.1415927f) {
            lllllllllllIlIllIllllIllIllIIllI += 6.2831855f;
        }
        if (lllllllllllIlIllIllllIllIllIIllI >= 3.1415927f) {
            lllllllllllIlIllIllllIllIllIIllI -= 6.2831855f;
        }
        return lllllllllllIlIllIllllIllIllIlIIl + lllllllllllIlIllIllllIllIllIIIll * lllllllllllIlIllIllllIllIllIIllI;
    }
    
    public void setRotationAngle(final ModelRenderer lllllllllllIlIllIllllIlllIllIlIl, final float lllllllllllIlIllIllllIlllIllIIII, final float lllllllllllIlIllIllllIlllIllIIll, final float lllllllllllIlIllIllllIlllIlIlllI) {
        lllllllllllIlIllIllllIlllIllIlIl.rotateAngleX = lllllllllllIlIllIllllIlllIllIIII;
        lllllllllllIlIllIllllIlllIllIlIl.rotateAngleY = lllllllllllIlIllIllllIlllIllIIll;
        lllllllllllIlIllIllllIlllIllIlIl.rotateAngleZ = lllllllllllIlIllIllllIlllIlIlllI;
    }
    
    @Override
    public void setInvisible(final boolean lllllllllllIlIllIllllIlllIIIIllI) {
        super.setInvisible(lllllllllllIlIllIllllIlllIIIIllI);
        this.bipedLeftArmwear.showModel = lllllllllllIlIllIllllIlllIIIIllI;
        this.bipedRightArmwear.showModel = lllllllllllIlIllIllllIlllIIIIllI;
        this.bipedLeftLegwear.showModel = lllllllllllIlIllIllllIlllIIIIllI;
        this.bipedRightLegwear.showModel = lllllllllllIlIllIllllIlllIIIIllI;
        this.bipedBodyWear.showModel = lllllllllllIlIllIllllIlllIIIIllI;
        this.bipedCape.showModel = lllllllllllIlIllIllllIlllIIIIllI;
        this.bipedDeadmau5Head.showModel = lllllllllllIlIllIllllIlllIIIIllI;
    }
}
